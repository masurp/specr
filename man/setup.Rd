% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setup.R
\name{setup}
\alias{setup}
\title{Set up specifications}
\usage{
setup(
  data,
  x,
  y,
  model,
  ...,
  controls = NULL,
  add_to_formula = NULL,
  tidy_f = function(x) broom::tidy(x, conf.int = TRUE),
  to_tibble = FALSE
)
}
\arguments{
\item{data}{the data set that should be used for the analysis}

\item{x}{a vector denoting independent variables}

\item{y}{a vector denoting the dependent variables}

\item{model}{a vector denoting the model(s) that should be estimated.}

\item{...}{specification of potental subsets/groups. As the subsetting variable should be in the data set, please specifiy as follows (\code{distinct(data, variable)}). See also examples further below.}

\item{controls}{a vector of the control variables that should be included. Defaults to NULL.}

\item{add_to_formula}{a string specifying aspects that should always be inluded in the formula (e.g. a constant covariate, random effect structures...)}

\item{tidy_f}{A function that extracts the parameters of interest from the fitted models. Defaults to \link[broom:broom]{tidy}, which works with a large range of models.}

\item{to_tibble}{If set to TRUE returns a simple data frame (tibble) instead of the S3 object \code{specr.setup}.}
}
\value{
a \code{specr.setup} object that includes all possible specifications based on combinations of the analytical choices.
}
\description{
This function creates a tibble that includes all possible specifications based the dependent and independent variables, model types, and control variables that are specified. This function simply produces a tibble of all combinations. It can be used to check the specified analytical choices. This function is called within \code{\link[=run_specs]{run_specs()}}, which estimates all specified models based on the data that are provided.
}
\examples{
# Example 1 ----
# Setting up typical specifications
specs <- setup(data = example_data,
               x = c("x1", "x2"),
               y = "y2",
               model = "lm",
               controls = c("c1", "c2"),
               distinct(example_data, group1))

# Check specifications
summary(specs)

# Example 2 ----
# Setting up more advanced specifications
specs <- setup(data = example_data,
               x = c("x1", "x2"),
               y = c("y1", "y2"),
               model = c("lmer"),              # multilevel model
               distinct(example_data, group1),
               controls = c("c1", "c2"),
               add_to_formula = "(1|group2)")  # random effect

# Check specifications
summary(specs, print.specs = TRUE)

}
\seealso{
\link{specr} to run the actual specification curve analysis

\code{\link[=specr]{specr()}} to run the specification curve analysis.
}
